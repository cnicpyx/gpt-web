"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-client)/./app/store/prompt.ts":
/*!*****************************!*\
  !*** ./app/store/prompt.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchService: function() { return /* binding */ SearchService; },\n/* harmony export */   usePromptStore: function() { return /* binding */ usePromptStore; }\n/* harmony export */ });\n/* harmony import */ var fuse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fuse.js */ \"(app-client)/./node_modules/fuse.js/dist/fuse.mjs\");\n/* harmony import */ var _locales__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../locales */ \"(app-client)/./app/locales/index.ts\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constant */ \"(app-client)/./app/constant.ts\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! nanoid */ \"(app-client)/./node_modules/nanoid/index.browser.js\");\n/* harmony import */ var _utils_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/store */ \"(app-client)/./app/utils/store.ts\");\n\n\n\n\n\nconst SearchService = {\n    ready: false,\n    builtinEngine: new fuse_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([], {\n        keys: [\n            \"title\"\n        ]\n    }),\n    userEngine: new fuse_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([], {\n        keys: [\n            \"title\"\n        ]\n    }),\n    count: {\n        builtin: 0\n    },\n    allPrompts: [],\n    builtinPrompts: [],\n    init (builtinPrompts, userPrompts) {\n        if (this.ready) {\n            return;\n        }\n        this.allPrompts = userPrompts.concat(builtinPrompts);\n        this.builtinPrompts = builtinPrompts.slice();\n        this.builtinEngine.setCollection(builtinPrompts);\n        this.userEngine.setCollection(userPrompts);\n        this.ready = true;\n    },\n    remove (id) {\n        this.userEngine.remove((doc)=>doc.id === id);\n    },\n    add (prompt) {\n        this.userEngine.add(prompt);\n    },\n    search (text) {\n        const userResults = this.userEngine.search(text);\n        const builtinResults = this.builtinEngine.search(text);\n        return userResults.concat(builtinResults).map((v)=>v.item);\n    }\n};\nconst usePromptStore = (0,_utils_store__WEBPACK_IMPORTED_MODULE_2__.createPersistStore)({\n    counter: 0,\n    prompts: {}\n}, (set, get)=>({\n        add (prompt) {\n            const prompts = get().prompts;\n            prompt.id = (0,nanoid__WEBPACK_IMPORTED_MODULE_4__.nanoid)();\n            prompt.isUser = true;\n            prompt.createdAt = Date.now();\n            prompts[prompt.id] = prompt;\n            set(()=>({\n                    prompts: prompts\n                }));\n            return prompt.id;\n        },\n        get (id) {\n            const targetPrompt = get().prompts[id];\n            if (!targetPrompt) {\n                return SearchService.builtinPrompts.find((v)=>v.id === id);\n            }\n            return targetPrompt;\n        },\n        remove (id) {\n            const prompts = get().prompts;\n            delete prompts[id];\n            Object.entries(prompts).some((param)=>{\n                let [key, prompt] = param;\n                if (prompt.id === id) {\n                    delete prompts[key];\n                    return true;\n                }\n                return false;\n            });\n            SearchService.remove(id);\n            set(()=>({\n                    prompts,\n                    counter: get().counter + 1\n                }));\n        },\n        getUserPrompts () {\n            var _get_prompts;\n            const userPrompts = Object.values((_get_prompts = get().prompts) !== null && _get_prompts !== void 0 ? _get_prompts : {});\n            userPrompts.sort((a, b)=>b.id && a.id ? b.createdAt - a.createdAt : 0);\n            return userPrompts;\n        },\n        updatePrompt (id, updater) {\n            var _get_prompts_id;\n            const prompt = (_get_prompts_id = get().prompts[id]) !== null && _get_prompts_id !== void 0 ? _get_prompts_id : {\n                title: \"\",\n                content: \"\",\n                id\n            };\n            SearchService.remove(id);\n            updater(prompt);\n            const prompts = get().prompts;\n            prompts[id] = prompt;\n            set(()=>({\n                    prompts\n                }));\n            SearchService.add(prompt);\n        },\n        search (text) {\n            if (text.length === 0) {\n                // return all rompts\n                return this.getUserPrompts().concat(SearchService.builtinPrompts);\n            }\n            return SearchService.search(text);\n        }\n    }), {\n    name: _constant__WEBPACK_IMPORTED_MODULE_1__.StoreKey.Prompt,\n    version: 3,\n    migrate (state, version) {\n        const newState = JSON.parse(JSON.stringify(state));\n        if (version < 3) {\n            Object.values(newState.prompts).forEach((p)=>p.id = (0,nanoid__WEBPACK_IMPORTED_MODULE_4__.nanoid)());\n        }\n        return newState;\n    },\n    onRehydrateStorage (state) {\n        const PROMPT_URL = \"./prompts.json\";\n        fetch(PROMPT_URL).then((res)=>res.json()).then((res)=>{\n            // let fetchPrompts = [res.en, res.cn];\n            let fetchPrompts = [\n                res.cn\n            ];\n            if ((0,_locales__WEBPACK_IMPORTED_MODULE_0__.getLang)() === \"cn\") {\n                fetchPrompts = fetchPrompts.reverse();\n            }\n            const builtinPrompts = fetchPrompts.map((promptList)=>{\n                return promptList.map((param)=>{\n                    let [title, content] = param;\n                    return {\n                        id: (0,nanoid__WEBPACK_IMPORTED_MODULE_4__.nanoid)(),\n                        title,\n                        content,\n                        createdAt: Date.now()\n                    };\n                });\n            });\n            var _usePromptStore_getState_getUserPrompts;\n            const userPrompts = (_usePromptStore_getState_getUserPrompts = usePromptStore.getState().getUserPrompts()) !== null && _usePromptStore_getState_getUserPrompts !== void 0 ? _usePromptStore_getState_getUserPrompts : [];\n            const allPromptsForSearch = builtinPrompts.reduce((pre, cur)=>pre.concat(cur), []).filter((v)=>!!v.title && !!v.content);\n            // SearchService.count.builtin = res.en.length + res.cn.length;\n            SearchService.count.builtin = res.cn.length;\n            SearchService.init(allPromptsForSearch, userPrompts);\n        });\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./app/store/prompt.ts\n"));

/***/ })

});